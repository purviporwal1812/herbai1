package com.example.herbai;

public class PlantItem {
    private String plantName;
    private String scientificName;
    private String family;
    private String kingdom;
    private String genus;
    private String species;
    private String medicinalProperties;
    private String habitat;
    private String uses;
    private String chemicalComponents;
    private boolean autoGenerated;
    private String dataSource;
    private double confidence;

    // Default constructor
    public PlantItem() {
        this.autoGenerated = false;
        this.dataSource = "Knowledge Graph";
        this.confidence = 0.0;
    }

    // Constructor with essential fields
    public PlantItem(String plantName, String scientificName, String family) {
        this();
        this.plantName = plantName;
        this.scientificName = scientificName;
        this.family = family;
    }

    // Getters
    public String getPlantName() {
        return plantName != null ? plantName : "Unknown Plant";
    }

    public String getScientificName() {
        return scientificName != null ? scientificName : "Unknown";
    }

    public String getFamily() {
        return family != null ? family : "Unknown";
    }

    public String getKingdom() {
        return kingdom != null ? kingdom : "Plantae";
    }

    public String getGenus() {
        return genus != null ? genus : "Unknown";
    }

    public String getSpecies() {
        return species != null ? species : "Unknown";
    }

    public String getMedicinalProperties() {
        return medicinalProperties != null ? medicinalProperties : "Information not available";
    }

    public String getHabitat() {
        return habitat != null ? habitat : "Various environments";
    }

    public String getUses() {
        return uses != null ? uses : "Uses not specified";
    }

    public String getChemicalComponents() {
        return chemicalComponents != null ? chemicalComponents : "Not specified";
    }

    public boolean isAutoGenerated() {
        return autoGenerated;
    }

    public String getDataSource() {
        return dataSource != null ? dataSource : "Knowledge Graph";
    }

    public double getConfidence() {
        return confidence;
    }

    // Display methods
    public String getDisplayTitle() {
        if (plantName != null && !plantName.trim().isEmpty()) {
            return plantName;
        } else if (scientificName != null && !scientificName.trim().isEmpty()) {
            return scientificName;
        } else {
            return "Unknown Plant";
        }
    }

    public String getShortDescription() {
        if (medicinalProperties != null && !medicinalProperties.trim().isEmpty()
                && !medicinalProperties.equals("Information not available")) {
            // Truncate to first 100 characters for display
            String desc = medicinalProperties.trim();
            if (desc.length() > 100) {
                return desc.substring(0, 97) + "...";
            }
            return desc;
        } else if (uses != null && !uses.trim().isEmpty()
                && !uses.equals("Uses not specified")) {
            String desc = uses.trim();
            if (desc.length() > 100) {
                return desc.substring(0, 97) + "...";
            }
            return desc;
        } else {
            return "Traditional medicinal plant with various therapeutic properties.";
        }
    }

    public String getFullDescription() {
        StringBuilder description = new StringBuilder();

        if (medicinalProperties != null && !medicinalProperties.trim().isEmpty()
                && !medicinalProperties.equals("Information not available")) {
            description.append("Medicinal Properties: ").append(medicinalProperties).append("\n\n");
        }

        if (uses != null && !uses.trim().isEmpty()
                && !uses.equals("Uses not specified")) {
            description.append("Uses: ").append(uses).append("\n\n");
        }

        if (habitat != null && !habitat.trim().isEmpty()
                && !habitat.equals("Various environments")) {
            description.append("Habitat: ").append(habitat).append("\n\n");
        }

        if (chemicalComponents != null && !chemicalComponents.trim().isEmpty()
                && !chemicalComponents.equals("Not specified")) {
            description.append("Chemical Components: ").append(chemicalComponents);
        }

        return description.toString().trim();
    }

    // Setters
    public void setPlantName(String plantName) {
        this.plantName = plantName;
    }

    public void setScientificName(String scientificName) {
        this.scientificName = scientificName;
    }

    public void setFamily(String family) {
        this.family = family;
    }

    public void setKingdom(String kingdom) {
        this.kingdom = kingdom;
    }

    public void setGenus(String genus) {
        this.genus = genus;
    }

    public void setSpecies(String species) {
        this.species = species;
    }

    public void setMedicinalProperties(String medicinalProperties) {
        this.medicinalProperties = medicinalProperties;
    }

    public void setHabitat(String habitat) {
        this.habitat = habitat;
    }

    public void setUses(String uses) {
        this.uses = uses;
    }

    public void setChemicalComponents(String chemicalComponents) {
        this.chemicalComponents = chemicalComponents;
    }

    public void setAutoGenerated(boolean autoGenerated) {
        this.autoGenerated = autoGenerated;
    }

    public void setDataSource(String dataSource) {
        this.dataSource = dataSource;
    }

    public void setConfidence(double confidence) {
        this.confidence = confidence;
    }

    @Override
    public String toString() {
        return "PlantItem{" +
                "plantName='" + plantName + '\'' +
                ", scientificName='" + scientificName + '\'' +
                ", family='" + family + '\'' +
                ", confidence=" + confidence +
                ", autoGenerated=" + autoGenerated +
                ", dataSource='" + dataSource + '\'' +
                '}';
    }
}