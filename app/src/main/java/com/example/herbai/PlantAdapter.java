package com.example.herbai;

import android.content.Context;
import android.content.Intent;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;

import java.util.ArrayList;
import java.util.List;

public class PlantAdapter extends RecyclerView.Adapter<PlantAdapter.PlantViewHolder> {
    private static final String TAG = "PlantAdapter";
    private List<PlantItem> plantList;
    private Context context;

    public PlantAdapter(List<PlantItem> plantList) {
        // Ensure plantList is never null
        this.plantList = plantList != null ? plantList : new ArrayList<>();
        Log.d(TAG, "PlantAdapter created with " + this.plantList.size() + " items");
    }

    // Method to update the plant list
    public void updatePlantList(List<PlantItem> newPlantList) {
        this.plantList = newPlantList != null ? newPlantList : new ArrayList<>();
        Log.d(TAG, "Plant list updated with " + this.plantList.size() + " items");
        notifyDataSetChanged();
    }

    @NonNull
    @Override
    public PlantViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        context = parent.getContext();
        View view = LayoutInflater.from(context).inflate(R.layout.item_plant, parent, false);
        Log.d(TAG, "onCreateViewHolder called");
        return new PlantViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull PlantViewHolder holder, int position) {
        Log.d(TAG, "onBindViewHolder called for position: " + position);

        if (plantList == null || position >= plantList.size()) {
            Log.w(TAG, "Invalid position or null plantList. Position: " + position + ", List size: " + (plantList != null ? plantList.size() : "null"));
            return;
        }

        PlantItem plant = plantList.get(position);
        if (plant == null) {
            Log.w(TAG, "Plant at position " + position + " is null");
            return;
        }

        Log.d(TAG, "Binding plant: " + plant.getDisplayTitle());

        // Set plant name with null check
        String plantName = plant.getDisplayTitle();
        String displayName = (plantName != null && !plantName.trim().isEmpty()) ? plantName : "Unknown Plant";
        holder.plantNameTextView.setText(displayName);
        Log.d(TAG, "Set plant name: " + displayName);

        // Set scientific name with null check
        String scientificName = plant.getScientificName();
        String displayScientificName = (scientificName != null && !scientificName.trim().isEmpty() && !scientificName.equals("Unknown"))
                ? scientificName : "Scientific name not available";
        holder.scientificNameTextView.setText(displayScientificName);
        Log.d(TAG, "Set scientific name: " + displayScientificName);

        // Set family with null check
        String family = plant.getFamily();
        String displayFamily = (family != null && !family.trim().isEmpty() && !family.equals("Unknown"))
                ? "Family: " + family : "Family: Unknown";
        holder.familyTextView.setText(displayFamily);
        Log.d(TAG, "Set family: " + displayFamily);

        // Set short description with null check
        String shortDescription = plant.getShortDescription();
        String displayDescription = (shortDescription != null && !shortDescription.trim().isEmpty())
                ? shortDescription : "No description available";
        holder.shortDescriptionTextView.setText(displayDescription);
        Log.d(TAG, "Set description: " + displayDescription);

        // Show data source indicator with null check
        String dataSource = plant.getDataSource();
        String dataSourceText = "Source: " + (dataSource != null ? dataSource : "Unknown");
        if (plant.isAutoGenerated()) {
            dataSourceText += " (Auto-generated)";
        }
        holder.dataSourceTextView.setText(dataSourceText);
        Log.d(TAG, "Set data source: " + dataSourceText);

        // Set click listener for the card
        holder.cardView.setOnClickListener(v -> {
            Log.d(TAG, "Card clicked for: " + plant.getDisplayTitle());
            Intent intent = new Intent(context, PlantDetailActivity.class);
            intent.putExtra("plant_name", plant.getPlantName() != null ? plant.getPlantName() : "");
            intent.putExtra("scientific_name", plant.getScientificName() != null ? plant.getScientificName() : "");
            intent.putExtra("family", plant.getFamily() != null ? plant.getFamily() : "");
            intent.putExtra("kingdom", plant.getKingdom() != null ? plant.getKingdom() : "");
            intent.putExtra("genus", plant.getGenus() != null ? plant.getGenus() : "");
            intent.putExtra("species", plant.getSpecies() != null ? plant.getSpecies() : "");
            intent.putExtra("medicinal_properties", plant.getMedicinalProperties() != null ? plant.getMedicinalProperties() : "");
            intent.putExtra("habitat", plant.getHabitat() != null ? plant.getHabitat() : "");
            intent.putExtra("uses", plant.getUses() != null ? plant.getUses() : "");
            intent.putExtra("chemical_components", plant.getChemicalComponents() != null ? plant.getChemicalComponents() : "");
            intent.putExtra("auto_generated", plant.isAutoGenerated());
            intent.putExtra("data_source", plant.getDataSource() != null ? plant.getDataSource() : "");
            context.startActivity(intent);
        });

        Log.d(TAG, "Successfully bound plant at position " + position);
    }

    @Override
    public int getItemCount() {
        int count = plantList != null ? plantList.size() : 0;
        Log.d(TAG, "getItemCount called, returning: " + count);
        return count;
    }

    public static class PlantViewHolder extends RecyclerView.ViewHolder {
        CardView cardView;
        TextView plantNameTextView;
        TextView scientificNameTextView;
        TextView familyTextView;
        TextView shortDescriptionTextView;
        TextView dataSourceTextView;

        public PlantViewHolder(@NonNull View itemView) {
            super(itemView);
            cardView = itemView.findViewById(R.id.plantCardView);
            plantNameTextView = itemView.findViewById(R.id.plantNameTextView);
            scientificNameTextView = itemView.findViewById(R.id.scientificNameTextView);
            familyTextView = itemView.findViewById(R.id.familyTextView);
            shortDescriptionTextView = itemView.findViewById(R.id.shortDescriptionTextView);
            dataSourceTextView = itemView.findViewById(R.id.dataSourceTextView);

            // Check if all views were found
            if (cardView == null) Log.e("PlantAdapter", "cardView not found");
            if (plantNameTextView == null) Log.e("PlantAdapter", "plantNameTextView not found");
            if (scientificNameTextView == null) Log.e("PlantAdapter", "scientificNameTextView not found");
            if (familyTextView == null) Log.e("PlantAdapter", "familyTextView not found");
            if (shortDescriptionTextView == null) Log.e("PlantAdapter", "shortDescriptionTextView not found");
            if (dataSourceTextView == null) Log.e("PlantAdapter", "dataSourceTextView not found");
        }
    }
}